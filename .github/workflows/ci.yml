name: ci

on:
  push:
  pull_request:
  merge_group:
  schedule:
    - cron: '0 18 * * *'

env:
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  rustfmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all-features

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
    - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
    - run: vcpkg install openssl:x64-windows-static-md
    - name: Run cargo check --all
      run: cargo check --all
    - name: Run the tests
      run: cargo test --all
    - name: Run the tests with x509-parser enabled
      run: cargo test --verbose --features x509-parser
    - name: Run cargo doc
      run: cargo doc --all --all-features

  build:
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        toolchain: [stable, beta, nightly, stable 7 months ago]
        exclude:
          - os: macOS-latest
            toolchain: beta
          - os: macOS-latest
            toolchain: nightly
          - os: macOS-latest
            toolchain: stable 7 months ago
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.toolchain }}
    - name: Run cargo check --all
      run: cargo check --all
    - name: Run the tests
      run: cargo test --all
    - name: Run the tests with x509-parser enabled
      run: cargo test --verbose --features x509-parser
    - name: Run cargo doc
      run: cargo doc --all --all-features

  coverage:
    name: Measure coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools
      - name: Measure coverage
        run: cargo llvm-cov --all-features --lcov --output-path ./lcov.info
      - name: Report to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./lcov.info
          fail_ci_if_error: false
          verbose: true
